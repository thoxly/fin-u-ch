name: Debug Deployment Logs

on:
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '9'

jobs:
  get-logs:
    name: Get VPS Logs
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Check Docker containers status
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd /opt/fin-u-ch
            echo "===== Docker Containers Status ====="
            docker ps -a
            echo ""
            echo "===== Docker Compose Status ====="
            docker compose -f docker-compose.prod.yml ps
          EOF

      - name: Get API logs
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd /opt/fin-u-ch
            echo "===== API Container Logs (last 100 lines) ====="
            docker logs fin-u-ch-api --tail 100
          EOF

      - name: Get Nginx logs
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd /opt/fin-u-ch
            echo "===== Nginx Container Logs (last 50 lines) ====="
            docker logs fin-u-ch-nginx --tail 50
          EOF

      - name: Get Worker logs
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd /opt/fin-u-ch
            echo "===== Worker Container Logs (last 50 lines) ====="
            docker logs fin-u-ch-worker --tail 50
          EOF

      - name: Check network connectivity
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd /opt/fin-u-ch
            echo "===== Network Test ====="
            docker compose -f docker-compose.prod.yml exec -T nginx wget -O- --timeout=5 http://api:4000/api/health 2>&1 || echo "Failed to connect"
          EOF

      - name: Check environment variables
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd /opt/fin-u-ch
            echo "===== Environment Variables (sanitized) ====="
            docker compose -f docker-compose.prod.yml exec -T api sh -c 'env | grep -E "^(NODE_ENV|PORT|DATABASE_URL|REDIS_URL)" | sed "s/\(.*PASSWORD.*=\).*/\1***/" | sed "s/\(.*SECRET.*=\).*/\1***/"' || echo "Cannot get env vars"
          EOF

      - name: Test API directly from inside API container
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd /opt/fin-u-ch
            echo "===== Test API from inside API container ====="
            docker compose -f docker-compose.prod.yml exec -T api wget -O- --timeout=5 http://localhost:4000/api/health 2>&1 || echo "Failed"
          EOF

      - name: Check if API process is running
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd /opt/fin-u-ch
            echo "===== API Container Process List ====="
            docker compose -f docker-compose.prod.yml exec -T api ps aux || echo "Cannot list processes"
          EOF
