#!/usr/bin/env node

/**
 * Cross-platform script to setup .env file from env.example
 * Works on Windows, macOS, and Linux
 */

const fs = require('fs');
const path = require('path');

// Resolve paths relative to project root
const rootDir = path.resolve(__dirname, '..');
const envExamplePath = path.join(rootDir, 'env.example');
const envPath = path.join(rootDir, '.env');

try {
  // Check if .env already exists
  if (fs.existsSync(envPath)) {
    console.log('‚úì .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ.');
    console.log('üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–±—Ä–æ—Å–∏—Ç—å, —É–¥–∞–ª–∏—Ç–µ .env –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞.');
    process.exit(0);
  }

  // Check if env.example exists
  if (!fs.existsSync(envExamplePath)) {
    console.error('‚ùå –û—à–∏–±–∫–∞: env.example –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    console.error(`   –û–∂–∏–¥–∞–µ–º—ã–π –ø—É—Ç—å: ${envExamplePath}`);
    process.exit(1);
  }

  // Copy env.example to .env
  fs.copyFileSync(envExamplePath, envPath);

  console.log('‚úì .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –∏–∑ env.example');
  console.log('');
  console.log('üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ .env –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  console.log('   2. –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ env.example —É–∂–µ –≥–æ—Ç–æ–≤—ã');
  console.log('   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: pnpm install && pnpm dev');
  console.log('');
  console.log('üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: docs/ENV_SETUP.md');
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ .env —Ñ–∞–π–ª–∞:', error.message);
  process.exit(1);
}

